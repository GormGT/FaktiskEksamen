<!DOCTYPE html>
<html lang="no">
<head>
    <%- include('partials/header') %>

    <link rel="stylesheet" href="CSS/styles.css">
</head>
<body>
    <%- include('partials/nav') %>

    <main class="guideMain">
        
        <h1>Veileder</h1>
        <h2>Her kan du finne informasjon om mye forskjellig</h2>

        <div id="guideNav">
            <p>Navigering:</p>
            <a href="#guideLXUser">Opprette ny bruker i linux</a>
            <a href="#guideNodeApp">Hoste en Node-applikasjon på en Ubuntu server</a>
            <a href="#guideSecurity">Sikkerhet og trusler</a>
            <a href="#guideAuth">Hvorfor autentisering?</a>
            <a href="#guidePlans">Planer og diagrammer</a>
        </div>

        <div id="guideLXUser" class="guideCont">
            <h1>Legge til adminbrukere i Linux</h1>
            
            <p>Før du begynner er det sterkt anbefalt at du bruker Powershell. Det gjør at det blir mye lettere når du skal kopiere inn nøklene i steg 4. For å koble til en Linux-maskin med Powershell kan du skrive inn <span class="terminalText">ssh brukernavn@serverensIP-adresse</span> for å logge på serveren.</p>
            <img class="guideImg" src="IMG/guideImg/userGuide1.png" alt="ssh pålogging demonstrert i powershell">

            <p>1. Aller først må vi gå til serveren sitt home-directory. Dette kan gjøres ved å skrive <span class="terminalText">sudo su</span>, og så <span class="terminalText">cd /home</span>.</p>
            <img class="guideImg" src="IMG/guideImg/userGuide2.png" alt="Steg en demonstrert i terminalen">

            <p>2. Når vi er i home-directory kan vi begynne å legge til brukere. I dette eksempelet legger vi til en bruker som heter Monica. Alt du trenger å skrive er <span class="terminalText">adduser monica</span>, og du vil bli veiledet gjennom prosessen med å fylle inn informasjon om brukeren.</p>
            <img class="guideImg" src="IMG/guideImg/userGuide3.png" alt="Bilde av slik terminalen ser ut når man legger til brukere">

            <p>3. Nå har vi laget en bruker som andre kan logge seg på, men vi kan gjøre prosessen med å logge seg på brukeren mer effektiv ved å legge til en public-key. Det betyr at en bruker som eier en public-key trenger ikke å bruke passord når de logger inn med sin bruker. Naviger inn i mappen til brukeren med <span class="terminalText">cd monica</span> og lag en ny mappe som skal hete .ssh med <span class="terminalText">mkdir .ssh</span>. Gå så inn i mappen med <span class="terminalText">cd .ssh</span>.</p>
            <img class="guideImg" src="IMG/guideImg/userGuide4.png" alt="Bilde av navigering til .ssh-mappen i terminalen">

            <p>4. Det er i .ssh mappen at vi legger inn en public-key, men for å gjøre det må vi opprette en fil som heter "authorized_keys" til å lagre den. Skriv <span class="terminalText">nano authorized_keys</span> (dobbeltsjekk at du har skrevet det riktig), og du vil nå kunne legge inn en public-key. Kopier keyen som personen du lager brukeren for har sendt deg, og kopier den inn ved å høyreklikke i terminalen. Når det er gjort trykker du ctrl+o og så ctrl+x.</p>

            <p>5. Til slutt skal vi gjøre brukeren til en administrator. Skriv inn <span class="terminalText">usermod -aG sudo monica</span>, og brukeren vil nå ha administratorrettigheter.</p>
            <img class="guideImg" src="IMG/guideImg/userGuide5.png" alt="Demonstrasjon av steg fem i terminalen">
        </div>

        <div id="guideNodeApp" class="guideCont">
            <h1>Hoste en Node-applikasjon på Linux</h1>

            <p>1. Aller først må vi ha et sted å lagre Node-applikasjonen. Kjør <span class="terminalText">sudo su</span> og så <span class="terminalText">cd /</span> for å gå til root-directory. Herfra kjører du <span class="terminalText">cd var</span> for å gå inn i var-mappen.</p>
            <img class="guideImg" src="IMG/guideImg/webGuide1.png" alt="Navigering til var-mappen demonstrert i terminalen">

            <p>2. Inne i var-mappen må vi opprette en www-mappe, som er der vi skal lagre applikasjonen. Skriv <span class="terminalText">mkdir www</span> og så <span class="terminalText">cd www</span> for å gå inn i den. Opprett så enda en ny mappe inne i www-mappen, som har navnet på applikasjonen du skal hoste. Når det er gjort, må vi gi de riktige tilgangene til mappen, slik at vi faktisk kan få overført Node-applikasjonen til serveren. Skriv inn <span class="terminalText">chown -R rootuser:rootuser /var/www</span> (bytt ut rootuser med brukernavnet til en av serverens admin-brukere).</p>
            <img class="guideImg" src="IMG/guideImg/webGuide2.png" alt="Opprettelse av www-mappen med riktige tilganger demonstrert i terminalen">

            <p>3. Så må vi få lagt inn filene til Node-applikasjonen i mappen. Dette er det flere måter å gjøre på, men i denne guiden skal vi bruke et program som heter FileZilla. Hvis du ikke har det installert, kan du laste det ned <a href="https://filezilla-project.org/">her</a>. Etter å ha åpnet FileZilla må vi koble til serveren vår. Trykk "koble til" øverst til venstre, og du vil få opp en meny.</p>
            <img class="guideImg" src="IMG/guideImg/webGuide3.png" alt="Menyen der man legger til nye servere i FileZilla">

            <p>4. I menyen som kommer opp velger vi først "Ny tjener" for å komme i gang. Deretter velger vi SSH-tilkobling, og skriver inn IP-adresse og påloggingsinformasjon for en admin-bruker på serveren. Deretter trykker du "koble til", og hvis alt er gjort riktig vil du etter hvert få opp mappevisningen til serveren til høyre. Naviger fram til mappen du lagde inne i www-mappen.</p>
            <img class="guideImg" src="IMG/guideImg/webGuide4.png" alt="Mappestrukturen til serveren vist i FileZilla">

            <p>5. Da er det på tide å overføre filene. I fanen til venstre navigerer du fram til filene for Node-applikasjonen på din lokale maskin, og så drar du filene fra mappen over i mappen på serveren. OBS: Ikke dra over node_modules, da det vil ta altfor lang tid og noen ganger overbelaste FileZilla. Når det er gjort kan du installere node_modules på serveren ved å kjøre <span class="terminalText">npm i</span> i terminalen. Hvis du ikke har npm installert på serveren, kan du kjøre <span class="terminalText">apt install npm</span>.</p>
            <img class="guideImg" src="IMG/guideImg/webGuide5.png" alt="Mappestrukturen og filene til Node-applikasjonen på en klientmaskin, vist i FileZilla">
            <img class="guideImg" src="IMG/guideImg/webGuide6.png" alt="Installering av Node-moduler i terminalen etter å ha overført filene til Node-applikasjonen til serveren">

            <p>6. Når alt er overført er det på tide å starte opp serveren, og det er så enkelt som å skrive <span class="terminalText">node .</span> i terminalen. Hvis du ikke får noen feilmeldinger burde Node-applikasjonen fungere som den skal, og du kan finne nettsiden ved å søke opp IP-adressen eller domenet (hvis du har det) i nettleseren.</p>
        </div>

        <div id="guideSecurity" class="guideCont">
            <h1>Sikkerhet og trusler</h1>

            <h2>Typiske trusler for en server:</h2>
            <ul>
                <li><p>Ddos Attack:<br>Overbelastning av serveren forårsaket av store menger trafikk, for eksempel for mange forespørsler til en database eller for mange brukere aktive på en gang.</p></li>
                <li><p>Brute Force Attack:<br>Forsøk på å komme inn på en server eller konto ved å prøve å gjette passordet til en bruker, ofte gjort med en maskin. Dårlige passord er spesielt lette å gjette.</p></li>
                <li><p>Malware:<br>Skadevare som kan komme seg inn på serveren på flere måter, både gjennom uforsiktige brukere eller dårlig oppsatt brannmur.</p></li>
                <li><p>SQL-injection:<br>Misbruk av input-felter eller andre steder der brukeren skriver inn informasjon, som lar andre kjøre kommandoer i databasen uten tilgang.</p></li>
            </ul>
            <p>Dette er bare noen av de mange truslene en webserver står ovenfor, og derfor er det viktig at man tar serverens sikkerhet på alvor. Det aller første man bør gjøre er å sette opp brannmuren slik at ingen uønsket trafikk kommer inn på serveren, og gi brukerne på serveren sterke passord (dette er spesielt viktig for admins). Her kan man også implementere nøkkelpålogging slik at man kan skru av passordpålogging, og dermed sikre seg selv fra Brute force attacks. For å forhindre Ddos-attacks kan man sette opp systemer som begrenser hvor ofte en bruker kan sende inn ting til databasen slik at den ikke overbelastes, og for SQL-injections må man sette opp input-felter slik at man ikke kan skrive inn kommandoer som gjør ting i databasen.</p>
        </div>

        <div id="guideAuth" class="guideCont">
            <h1>Hvorfor autentisering?</h1>

            <p>Autentisering er viktig fordi det gjør at ikke alle på en server eller nettsted har tilgang til alt mulig, men isteden så har hver bruker tilgang til kun det de skal ha tilgang til. På denne nettsiden brukes autentisering til å forsikre at kun innloggede bruker har tilgang til sine todo-lister, og hindre at brukere kan endre på lister eid av andre brukere. Det brukes også til å skille mellom vanlig bruker og admin, og hadde du ikke vært en admin-bruker ville du ikke kunnet lese dette. Autentisering gjør hele siden mye sikrere.</p>
        </div>

        <div id="guidePlans" class="guideCont">
            <h1>Oversikt: IP-plan og nettverksdiagram</h1>
            <h2>Nettverksdiagram</h2>
            <img src="IMG/NettverksDiagram.png" class="guideImg" alt="Nettverksdiagram for hvordan siden blir hostet" width="700px">

            <h2>IP-plan</h2>
            <img src="IMG/IP-plan.png" class="guideImg" alt="IP-plan for serverne som brukes til å hoste siden" width="500px">

            <h2>ER-diagram</h2>
            <img src="IMG/ER-diagram.png" class="guideImg" alt="ER-diagram for nettsidens database" width="500px">
        </div>

    </main>
</body>
</html>